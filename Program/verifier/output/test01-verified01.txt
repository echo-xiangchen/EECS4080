bigger_or_smaller()
require
    (  ( x > 0 )  and  ( y > 0 )  ) 
do
if  ( x > y )  then
  bigger := x;
  smaller := y;
else
  bigger := y;
  smaller := x;
end

ensure
    ( bigger >= smaller ) 
end

Where: 
Precondition(P) : 
    (  ( x > 0 )  and  ( y > 0 )  ) 
Implementation(S) : 
if  ( x > y )  then
  bigger := x;
  smaller := y;
else
  bigger := y;
  smaller := x;
end

Postcondition(Q) : 
    ( bigger >= smaller ) 
wp(S, Q) : 
    (  (  (  (  ( x > 0 )  and  ( y > 0 )  )  and  ( x > y )  )  =>  ( x >= y )  )  and  (  (  (  ( x > 0 )  and  ( y > 0 )  )  and (not  ( x > y )  ))  =>  ( y >= x )  )  ) 
Proof Obligation: P => wp(S, Q)

Discharged.
