(declare-const i Int)
(assert (= i (- (* 5 6) 9)))
(declare-const j Int)
(assert (= j (+ 1 9)))
(declare-const m Int)
(assert (= m (- 35 (* 12 2))))
(declare-const p Bool)
(assert (= p true))
(declare-const q Bool)
(assert (= q (not p)))
(declare-const n Int)
(assert (= n (- (+ i (* m j)) 25)))
(declare-const r Bool)
(assert (= r (=> (not p) (and q p))))
(declare-const s Bool)
(assert (= s (= (and r p) (and q p))))
(declare-const s1 Bool)
(assert (= s1 (>= i (- j 3))))
(declare-const r0 Bool)
(assert (= r0 (= m (* i (+ j 5)))))
(declare-const k Bool)
(assert (= k (= i (- m 7))))
(assert (not (= (not r0) (or (and (=> s1 (or (not k) r)) (= i (- j m))) (and k (not (>= m n)))))))
(check-sat)
;Remove the comment if the result of z3 online tool returns "sat"
;(get-model)
