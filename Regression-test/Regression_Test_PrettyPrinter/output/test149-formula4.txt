(declare-const i Int)
(assert (= i (- (* 5 6) 9)))
(declare-const j Int)
(assert (= j (+ 1 9)))
(declare-const m Int)
(assert (= m (- 35 (* 12 2))))
(declare-const p Bool)
(assert (= p true))
(declare-const q Bool)
(assert (= q (not p)))
(declare-const n Int)
(assert (= n (- (+ i (* m j)) 25)))
(declare-const r Bool)
(assert (= r (=> (not p) (and q p))))
(declare-const s Bool)
(assert (= s (= (and r p) (and q p))))
(declare-const s1 Bool)
(assert (= s1 (>= i (- j 3))))
(declare-const r0 Bool)
(assert (= r0 (= m (* i (+ j 5)))))
(declare-const k Bool)
(assert (= k (= i (- m 7))))
(declare-const p0 Bool)
(assert (= p0 (=> (or (and (< (+ i (* j m)) n) (not q)) (>= n (+ i j))) (= m 11))))
(assert (not (= (=> (and (>= i (- m j)) (not p)) (or (and q s1) k)) (or (> n (- (* m i) 2)) (not (= m (- j (* i 9))))))))
(check-sat)
;Remove the comment if the result of z3 online tool returns "sat"
;(get-model)
