Correctness conditions : 
1. Given precondition Q, the initialization step Sinit establishes LI I : {Q} Sinit {I}
  ((a.count > 0) => (1 <= 1))

2. At the end of Sbody, if not yet to exit, LI I is maintained : {I and (not B)} Sbody {I}
  (((j <= i) and (not (i > a.upper))) => (((a[i] = value) => ((j + 1) <= (i + 1))) and ((not (a[i] = value)) => (j <= (i + 1)))))

3. If ready to exit and LI I maintained, postcondition R is established : I and B => R
  (((j <= i) and (i > a.upper)) => exists k1 | ((a[k1] = value) => exists s1 | (Result[s1] = k1)))

4. Given LI I, and not yet to exit, Sbody maintains LV V as non-negative : {I and (not B)} Sbody {V >= 0}
  (((j <= i) and (not (i > a.upper))) => (((a[i] = value) => (((a.upper - (i + 1)) + 1) >= 0)) and ((not (a[i] = value)) => (((a.upper - (i + 1)) + 1) >= 0))))

5. Given LI I, and not yet to exit, Sbody decrements LV V : {I and (not B)} Sbody {V < V0}
  (((j <= i) and (not (i > a.upper))) => (((a[i] = value) => (((a.upper - (i + 1)) + 1) < ((a.upper - i) + 1))) and ((not (a[i] = value)) => (((a.upper - (i + 1)) + 1) < ((a.upper - i) + 1)))))