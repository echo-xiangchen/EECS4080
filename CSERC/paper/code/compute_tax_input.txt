compute_tax(status: INTEGER ; income: INTEGER) : REAL
require
	positive_income: income >= 0
local
	part1: REAL
	part2: REAL
	part3: REAL
do
	if status = 1 or status = 2 then
		if status = 1 then
			if income <= 8350 then
				part1 := income * 0.1;
				Result := part1;
			elseif income <= 33950 then
				part1 := 8350 * 0.1;
				part2 := (income - 8350) * 0.15;
				Result := part1 + part2;
			else
				part1 := 8350 * 0.1;
				part2 := (33950 - 8350) * 0.15;
				part3 := (income - 33950) * 0.25;
				Result := part1 + part2 + part3;
			end
		else
			if income <= 16700 then
				part1 := income * 0.1;
				Result := part1;
			elseif income <= 67900 then
				part1 := 16700 * 0.1;
				part2 := (income - 16700) * 0.15;
				Result := part1 + part2;
			else
				part1 := 16700 * 0.1;
				part2 := (67900 - 16700) * 0.15;
				part3 := (income - 67900) * 0.25;
				Result := part1 + part2 + part3;
			end
		end
	else
		Result := -1;
	end
ensure
	-- Discharged postcondition example
	discharged: (status = 1 and income = 34870) => (Result = part1 + part2 + part3)

	-- Not discharged postcondition example
	not_discharged: (status = 2 and income > 67900) => (Result = 16700 * 0.1 + (67900 - 16700) * 0.15)
end

verify compute_tax