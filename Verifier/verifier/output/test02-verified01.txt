test_example
  require
    not_empty : true
  do
    q1 := a1[1];
    i1 := a2[i2];
    j1 := a3[(i1 + 1)];
    r := a2[index1];
  ensure
    boolean_case : (q1 = a1[1])
    integer_case : (i1 = a2[i2])
    real_case : (j1 = a3[(i1 + 1)])
    real_integer_case : (r = a2[index1])
    boolean_old : (q2 = old q2)
    integer_old : (i2 = old i2)
    real_old : (j2 = old j2)
  end

Where: 
Precondition(Q) : 
    not_empty : true
Postcondition(R) : 
    boolean_case : (q1 = a1[1])
    integer_case : (i1 = a2[i2])
    real_case : (j1 = a3[(i1 + 1)])
    real_integer_case : (r = a2[index1])
    boolean_old : (q2 = old q2)
    integer_old : (i2 = old i2)
    real_old : (j2 = old j2)
Implementation(S) : 
    q1 := a1[1];
    i1 := a2[i2];
    j1 := a3[(i1 + 1)];
    r := a2[index1];

wp(S, boolean_case)
  (a1[1] = a1[1])
wp(S, integer_case)
  (a2[i2] = a2[i2])
wp(S, real_case)
  (a3[(i1 + 1)] = a3[(i1 + 1)])
wp(S, real_integer_case)
  (a2[index1] = a2[index1])
wp(S, boolean_old)
  (q2 = old q2)
wp(S, integer_old)
  (i2 = old i2)
wp(S, real_old)
  (j2 = old j2)

Proof Obligation: 
(not_empty) => wp(S, boolean_case)
Discharged.
(not_empty) => wp(S, integer_case)
Discharged.
(not_empty) => wp(S, real_case)
Discharged.
(not_empty) => wp(S, real_integer_case)
Discharged.
(not_empty) => wp(S, boolean_old)
Discharged.
(not_empty) => wp(S, integer_old)
Discharged.
(not_empty) => wp(S, real_old)
Discharged.
