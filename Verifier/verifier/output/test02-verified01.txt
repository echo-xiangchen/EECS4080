test_example
  require
    not_empty : true
  do
    q1 := q2;
    i1 := i2;
    j1 := j2;
    r := s;
  ensure
    boolean_case : (q1 = q2)
    integer_case : (i1 = i2)
    real_case : (j1 = j2)
    real_integer_case : (r = s)
    boolean_old : (q2 = old q2)
    integer_old : (i2 = old i2)
    real_old : (j2 = old j2)
  end

Where: 
Precondition(Q) : 
    not_empty : true
Postcondition(R) : 
    boolean_case : (q1 = q2)
    integer_case : (i1 = i2)
    real_case : (j1 = j2)
    real_integer_case : (r = s)
    boolean_old : (q2 = old q2)
    integer_old : (i2 = old i2)
    real_old : (j2 = old j2)
Implementation(S) : 
    q1 := q2;
    i1 := i2;
    j1 := j2;
    r := s;

wp(S, boolean_case)
  (q2 = q2)
wp(S, integer_case)
  (i2 = i2)
wp(S, real_case)
  (j2 = j2)
wp(S, real_integer_case)
  (s = s)
wp(S, boolean_old)
  (q2 = old q2)
wp(S, integer_old)
  (i2 = old i2)
wp(S, real_old)
  (j2 = old j2)

Proof Obligation: 
(not_empty) => wp(S, boolean_case)
Discharged.
(not_empty) => wp(S, integer_case)
Discharged.
(not_empty) => wp(S, real_case)
Discharged.
(not_empty) => wp(S, real_integer_case)
Discharged.
(not_empty) => wp(S, boolean_old)
Discharged.
(not_empty) => wp(S, integer_old)
Discharged.
(not_empty) => wp(S, real_old)
Discharged.
