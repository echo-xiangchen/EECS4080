-- test program verification
-- test_example (no error)


find_occurrence (a: ARRAY[INTEGER] ; value: INTEGER) : ARRAY[INTEGER]
require
	not_empty: a.count > 0
local
	i: INTEGER
	j: INTEGER
do
	-- loop
	from
		i := a.lower;
		j := 1;
	invariant
		loop_invariant: i < a.upper
	until
		i > a.upper
	loop
		if a[i] = value then
			Result[j] := i;
			j := j + 1;
		end
		i := i + 1;
	variant
		loop_variant: a.upper - i + 1
	end
ensure
	case1: p.x = s
	case2: forall k: INTEGER; | (a.lower <= k and k <= a.upper) => (Result[k] = a[k])
end

verify test_example