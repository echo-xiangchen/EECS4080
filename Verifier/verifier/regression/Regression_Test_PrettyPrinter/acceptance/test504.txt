-- test program verification
-- test_example (with error)

p:PAIR[x:INTEGER; y: REAL]


test_example (a: ARRAY[INTEGER]) : ARRAY[INTEGER]
require
	not_empty: a.count > 0
local
	i: INTEGER
do
	-- assignment
	s := 5;
	
	-- alternation
	if s =5 then
		p.x := s;
	else
		p.y := s;
	end
	
	-- loop
	from
		i := a.lower;
	invariant
		loop_invariant: forall j: INTEGER; | (a.lower <= j and j < i) => (Result[j] = a[j])
	until
		i > a.upper
	loop
		Result[i] := a[i];
		i := i + 1;
	variant
		loop_variant: a.upper - i + 1
	end
ensure
	correct_result1: p.x = i1
	correct_result2: forall k: INTEGER; | (a.lower <= k and k <= a.upper) => (Result[k] = a[k])
end

verify test_example